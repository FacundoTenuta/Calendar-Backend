{"version":3,"sources":["types/types.js","redux-reducers/uiReducer.js","redux-reducers/calendarReducer.js","redux-reducers/authReducer.js","redux-reducers/rootReducer.js","redux-store/store.js","hooks/useForm/useForm.js","helpers/fetch.js","helpers/prepareEvents.js","redux-actions/events.js","redux-actions/auth.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","redux-actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","events","activeEvent","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventsLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getDate","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f45c90a.chunk.js","sourcesContent":["export const types = {\r\n\r\n    uiOpenModal: \"[UI] Open modal\",\r\n    uiCloseModal: \"[UI] Close modal\",\r\n\r\n    eventSetActive: \"[EVENT] Set active\",\r\n    eventStartAddNew: \"[EVENT] Start add new\",\r\n    eventAddNew: \"[EVENT] Add new\",\r\n    eventClearActiveEvent: \"[EVENT] Clear active event\",\r\n    eventUpdated: \"[EVENT] Event updated\",\r\n    eventDeleted: \"[EVENT] Event deleted\",\r\n    eventsLoaded: \"[EVENT] Events loaded\",\r\n    eventLogout: \"[EVENT] Event logout\",\r\n\r\n    authCheckingFinish: \"[AUTH] Finish checking login state\",\r\n    authStartLogin: \"[AUTH] Start login\",\r\n    authLogin: \"[AUTH] Login\",\r\n    authStartRegister: \"[AUTH] Start register\",\r\n    authStartTokenRenew: \"[AUTH] Start token renew\",\r\n    authLogout: \"[AUTH] Logout\",\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.uiOpenModal:\r\n            return{\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n\r\n        case types.uiCloseModal:\r\n            return{\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\n// {\r\n//     id: \"zaasdasads\",\r\n//     title: \"Cumpleaños del jefe\",\r\n//     start: moment().toDate(),\r\n//     end: moment().add( 2, \"hours\" ).toDate(),\r\n//     notes: \"Comprar el pastel\",\r\n//     user: {\r\n//         _id: \"123\",\r\n//         name: \"Facundo\"\r\n//     }\r\n// }\r\n\r\n\r\nconst initialState = {\r\n\r\n    events: [],\r\n    activeEvent: null\r\n\r\n}\r\n\r\n\r\nexport const calendarReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [ ...state.events, action.payload ],\r\n            }\r\n\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventsLoaded:\r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            }\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map( \r\n                    e => ( e.id === action.payload.id ) ? action.payload : e\r\n                )\r\n                // events: action.payload\r\n            }\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => ( e.id !== state.activeEvent.id )\r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    checking: true,\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false,\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false,\r\n            }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { combineReducers } from \"redux\";\r\nimport { uiReducer } from \"./uiReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { authReducer } from \"./authReducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer,\r\n});","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport { rootReducer } from \"../redux-reducers/rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","import { useState } from \"react\";\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n}\r\n","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\nconst fetchSinToken = ( endpoint, data, method = \"GET\" ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n\r\n    if ( method === \"GET\" ) {\r\n        \r\n        return fetch( url );\r\n\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n\r\n}\r\n\r\nconst fetchConToken = ( endpoint, data, method = \"GET\" ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem(\"token\") || \"\";\r\n\r\n    if ( method === \"GET\" ) {\r\n        \r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                \"x-token\": token\r\n            }\r\n        });\r\n\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n                \"x-token\": token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","import moment from \"moment\";\r\n\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n\r\n    return events.map( \r\n        (e) => ({\r\n            ...e,\r\n            end: moment( e.end ).toDate(),\r\n            start: moment( e.start ).toDate(),\r\n        })\r\n    );\r\n\r\n}\r\n","import { types } from \"../types/types\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken( \"events\", event, \"POST\" );\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                dispatch( eventAddNew( event ) );\r\n            }\r\n\r\n        } catch (error) {\r\n\r\n            console.log(error);\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventAddNew = ( event ) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = ( event ) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent,\r\n});\r\n\r\nexport const eventStartUpdate = ( event ) => {\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken( `events/${ event.id }`, event, \"PUT\" );\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( eventUpdated( event ) );\r\n            } else {\r\n                Swal.fire(\"Error\", body.msg, \"error\");\r\n            }\r\n\r\n        } catch (error) {\r\n            \r\n            console.log(error);\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventUpdated = ( event ) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { id } = getState().calendar.activeEvent;\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken( `events/${ id }`, {}, \"DELETE\" );\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( eventDeleted() );\r\n            } else {\r\n                Swal.fire(\"Error\", body.msg, \"error\");\r\n            }\r\n\r\n        } catch (error) {\r\n            \r\n            console.log(error);\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted,\r\n});\r\n\r\nexport const eventsStartLoading = () => {\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken( \"events\" );\r\n            const body = await resp.json();\r\n\r\n            const events = prepareEvents( body.eventos );\r\n\r\n            dispatch( eventsLoaded( events ) );\r\n            \r\n        } catch (error) {\r\n\r\n            console.log(error);\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventsLoaded = (events) => ({\r\n    type: types.eventsLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout,\r\n})\r\n","import { fetchSinToken, fetchConToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport Swal from \"sweetalert2\";\r\nimport { eventLogout } from \"./events\";\r\n\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async( dispatch ) => {\r\n\r\n        const resp = await fetchSinToken( \"auth\", { email, password }, \"POST\" );\r\n        const body = await resp.json();\r\n\r\n        if ( body.ok ) {\r\n            localStorage.setItem(\"token\", body.token );\r\n            localStorage.setItem(\"token-init-date\", new Date().getDate() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else {\r\n            Swal.fire(\"Error\", body.msg, \"error\");\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startRegister = ( email, password, name ) => {\r\n    return async( dispatch ) => {\r\n\r\n        const resp = await fetchSinToken( \"auth/new\", { email, password, name }, \"POST\" );\r\n        const body = await resp.json();\r\n\r\n        if ( body.ok ) {\r\n            localStorage.setItem(\"token\", body.token );\r\n            localStorage.setItem(\"token-init-date\", new Date().getDate() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else {\r\n            Swal.fire(\"Error\", body.msg, \"error\");\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async( dispatch ) => {\r\n\r\n        const resp = await fetchConToken( \"auth/renew\" );\r\n        const body = await resp.json();\r\n\r\n        if ( body.ok ) {\r\n            localStorage.setItem(\"token\", body.token );\r\n            localStorage.setItem(\"token-init-date\", new Date().getDate() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else {\r\n            dispatch( checkingFinish() );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n});\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return ( dispatch ) => {\r\n\r\n        localStorage.clear();\r\n        dispatch( eventLogout() );\r\n        dispatch( logout() );\r\n\r\n    }\r\n};\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n});","import React from 'react';\r\nimport './login.css';\r\nimport { useForm } from '../../hooks/useForm/useForm';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogin, startRegister } from '../../redux-actions/auth';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: \"facundo@gmail.com\",\r\n        lPassword: \"123456\"\r\n    });\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: \"Nando\",\r\n        rEmail: \"Nando@gmail.com\",\r\n        rPassword1: \"123456\",\r\n        rPassword2: \"123456\",\r\n    });\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n    \r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n    const handleLogin = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        dispatch( startLogin( lEmail, lPassword ) );\r\n\r\n    }\r\n\r\n    const handleRegister = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if ( rPassword1 !== rPassword2 ) {\r\n            return Swal.fire(\"Error\", \"Las contraseñas deben ser iguales\", \"error\");\r\n        }\r\n\r\n        dispatch( startRegister( rEmail, rPassword1, rName ) )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={ rName }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={ rEmail }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value={ rPassword1 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={ rPassword2 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { startLogout } from '../../redux-actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const { name } = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n\r\n        dispatch( startLogout() );\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                { name }\r\n            </span>\r\n\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={ handleLogout }\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react';\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n\r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong>{ title }</strong>\r\n            <span> - { user.name }</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n});\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n});","import React, { useState, useEffect } from 'react';\r\nimport moment from \"moment\";\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { uiCloseModal } from '../../redux-actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../redux-actions/events';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n};\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1,\"hours\");\r\nconst nowPlus1 = now.clone().add(1,\"hours\");\r\n\r\nconst initEvent = {\r\n    title: \"\",\r\n    notes: \"\",\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const { activeEvent } = useSelector(state => state.calendar);\r\n\r\n    const [titleValid, setTitleValid] = useState( true );\r\n\r\n    const [formValues, setFormValues] = useState( initEvent );\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        \r\n        if ( activeEvent ) {\r\n            setFormValues( activeEvent );\r\n        } else {\r\n            setFormValues( initEvent );\r\n        }\r\n\r\n    }, [activeEvent]);\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch( uiCloseModal() );\r\n        dispatch( eventClearActiveEvent() );\r\n        setFormValues( initEvent );\r\n    }\r\n\r\n    const handleStartDateChange = ( e ) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        });\r\n    }\r\n\r\n    const handleEndDateChange = ( e ) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        });\r\n    }\r\n\r\n    const handleSubmitForm = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment( start );\r\n        const momentEnd = moment( end );\r\n\r\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\r\n            return Swal.fire(\"Error\", \"La fecha fin debe ser mayor a la fecha de inicio\", \"error\");\r\n        }\r\n\r\n        if ( title.trim().length < 2) {\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        if ( activeEvent ) {\r\n            dispatch( eventStartUpdate( formValues ) );\r\n        } else {\r\n            dispatch( eventStartAddNew( formValues ) );\r\n        }\r\n\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n    \r\n\r\n    return (\r\n        <Modal\r\n          isOpen={ modalOpen }\r\n          onRequestClose={ closeModal }\r\n          style={customStyles}\r\n          closeTimeoutMS={ 200 }\r\n          className=\"modal\"\r\n          overlayClassName=\"modal-fondo\"\r\n        >\r\n\r\n            <h1> { (activeEvent)? \"Editar evento\": \"Nuevo evento\" } </h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={ handleSubmitForm }\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        className=\"form-control\"\r\n                        onChange={ handleStartDateChange }\r\n                        value={ start }\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        className=\"form-control\"\r\n                        onChange={ handleEndDateChange }\r\n                        minDate={ start }\r\n                        value={ end }\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={ `form-control ${ !titleValid &&\"is-invalid\" }` }\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../redux-actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = () => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={ handleClick }\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../redux-actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( eventStartDelete() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={ handleDelete }\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento </span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport \"moment/locale/es\";\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\n\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../redux-actions/ui';\r\nimport { eventSetActive, eventClearActiveEvent, eventsStartLoading } from '../../redux-actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale(\"es\");\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector(state => state.calendar);\r\n    const { uid } = useSelector(state => state.auth);\r\n\r\n    const [lastView, setLastView] = useState( localStorage.getItem(\"lastView\") || \"month\");\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( eventsStartLoading() );\r\n\r\n    }, [dispatch]);\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch( eventSetActive(e) );\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem(\"lastView\", e);\r\n    }\r\n\r\n    const onSelectedSlot = (e) => {\r\n        dispatch( eventClearActiveEvent() )\r\n    }\r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n        \r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id ) ? \"#367CF7\" : \"#465660\",\r\n            borderRadius: \"0px\",\r\n            opacity: 0.8,\r\n            display: \"block\",\r\n            color: \"white\"\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={ localizer }\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={ messages }\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={ onSelectEvent }\r\n                onView={ onViewChange }\r\n                onSelectSlot={ onSelectedSlot }\r\n                selectable={ true }\r\n                view={ lastView }\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n                <AddNewFab />\r\n                {\r\n                    activeEvent &&\r\n                    <DeleteEventFab />\r\n                }\r\n\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? \r\n                    ( <Redirect to=\"/\" />)\r\n                    :\r\n                    (<Component { ...props } />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? \r\n                (<Component { ...props } />)\r\n                    :\r\n                ( <Redirect to=\"/login\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { startChecking } from '../redux-actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( startChecking() );\r\n\r\n    }, [dispatch]);\r\n\r\n    if ( checking ) {\r\n        return (<h5>Espere...</h5>);\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n\r\n                    <PublicRoute \r\n                        exact \r\n                        path=\"/login\"\r\n                        component={ LoginScreen }\r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n\r\n                    <PrivateRoute \r\n                        exact \r\n                        path=\"/\"\r\n                        component={ CalendarScreen }\r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n\r\n                    <Redirect to=\"/\" />\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './redux-store/store';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport \"./styles.css\";\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}